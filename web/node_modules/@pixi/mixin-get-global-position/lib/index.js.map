{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/// <reference path=\"../global.d.ts\" />\nimport { DisplayObject } from '@pixi/display';\nimport { Point } from '@pixi/core';\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Point} [point=new PIXI.Point()] - The point to write the global value to.\n * @param {boolean} [skipUpdate=false] - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @returns {PIXI.Point} The updated point.\n */\nDisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point: Point = new Point(), skipUpdate = false): Point\n{\n    if (this.parent)\n    {\n        this.parent.toGlobal(this.position, point, skipUpdate);\n    }\n    else\n    {\n        point.x = this.position.x;\n        point.y = this.position.y;\n    }\n\n    return point;\n};\n"],"names":["DisplayObject","Point"],"mappings":";;;;;AAcAA,qBAAc,CAAA,SAAA,CAAU,oBAAoB,SAA2B,iBAAA,CAAA,KAAA,GAAe,IAAIC,UAAM,EAAA,EAAG,aAAa,KAChH,EAAA;AACI,EAAA,IAAI,KAAK,MACT,EAAA;AACI,IAAA,IAAA,CAAK,MAAO,CAAA,QAAA,CAAS,IAAK,CAAA,QAAA,EAAU,OAAO,UAAU,CAAA,CAAA;AAAA,GAGzD,MAAA;AACI,IAAM,KAAA,CAAA,CAAA,GAAI,KAAK,QAAS,CAAA,CAAA,CAAA;AACxB,IAAM,KAAA,CAAA,CAAA,GAAI,KAAK,QAAS,CAAA,CAAA,CAAA;AAAA,GAC5B;AAEA,EAAO,OAAA,KAAA,CAAA;AACX,CAAA;;"}