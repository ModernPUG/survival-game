{"version":3,"file":"mapType.js","sources":["../../../src/shader/utils/mapType.ts"],"sourcesContent":["import type { Dict } from '@pixi/utils';\n\nlet GL_TABLE: Dict<string> = null;\n\nconst GL_TO_GLSL_TYPES: Dict<string> = {\n    FLOAT:       'float',\n    FLOAT_VEC2:  'vec2',\n    FLOAT_VEC3:  'vec3',\n    FLOAT_VEC4:  'vec4',\n\n    INT:         'int',\n    INT_VEC2:    'ivec2',\n    INT_VEC3:    'ivec3',\n    INT_VEC4:    'ivec4',\n\n    UNSIGNED_INT:         'uint',\n    UNSIGNED_INT_VEC2:    'uvec2',\n    UNSIGNED_INT_VEC3:    'uvec3',\n    UNSIGNED_INT_VEC4:    'uvec4',\n\n    BOOL:        'bool',\n    BOOL_VEC2:   'bvec2',\n    BOOL_VEC3:   'bvec3',\n    BOOL_VEC4:   'bvec4',\n\n    FLOAT_MAT2:  'mat2',\n    FLOAT_MAT3:  'mat3',\n    FLOAT_MAT4:  'mat4',\n\n    SAMPLER_2D:              'sampler2D',\n    INT_SAMPLER_2D:          'sampler2D',\n    UNSIGNED_INT_SAMPLER_2D: 'sampler2D',\n    SAMPLER_CUBE:              'samplerCube',\n    INT_SAMPLER_CUBE:          'samplerCube',\n    UNSIGNED_INT_SAMPLER_CUBE: 'samplerCube',\n    SAMPLER_2D_ARRAY:              'sampler2DArray',\n    INT_SAMPLER_2D_ARRAY:          'sampler2DArray',\n    UNSIGNED_INT_SAMPLER_2D_ARRAY: 'sampler2DArray',\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function mapType(gl: any, type: number): string\n{\n    if (!GL_TABLE)\n    {\n        const typeNames = Object.keys(GL_TO_GLSL_TYPES);\n\n        GL_TABLE = {};\n\n        for (let i = 0; i < typeNames.length; ++i)\n        {\n            const tn = typeNames[i];\n\n            GL_TABLE[gl[tn]] = GL_TO_GLSL_TYPES[tn];\n        }\n    }\n\n    return GL_TABLE[type];\n}\n"],"names":[],"mappings":";;;;AAEA,IAAI,QAAyB,GAAA,IAAA,CAAA;AAE7B,MAAM,gBAAiC,GAAA;AAAA,EACnC,KAAa,EAAA,OAAA;AAAA,EACb,UAAa,EAAA,MAAA;AAAA,EACb,UAAa,EAAA,MAAA;AAAA,EACb,UAAa,EAAA,MAAA;AAAA,EAEb,GAAa,EAAA,KAAA;AAAA,EACb,QAAa,EAAA,OAAA;AAAA,EACb,QAAa,EAAA,OAAA;AAAA,EACb,QAAa,EAAA,OAAA;AAAA,EAEb,YAAsB,EAAA,MAAA;AAAA,EACtB,iBAAsB,EAAA,OAAA;AAAA,EACtB,iBAAsB,EAAA,OAAA;AAAA,EACtB,iBAAsB,EAAA,OAAA;AAAA,EAEtB,IAAa,EAAA,MAAA;AAAA,EACb,SAAa,EAAA,OAAA;AAAA,EACb,SAAa,EAAA,OAAA;AAAA,EACb,SAAa,EAAA,OAAA;AAAA,EAEb,UAAa,EAAA,MAAA;AAAA,EACb,UAAa,EAAA,MAAA;AAAA,EACb,UAAa,EAAA,MAAA;AAAA,EAEb,UAAyB,EAAA,WAAA;AAAA,EACzB,cAAyB,EAAA,WAAA;AAAA,EACzB,uBAAyB,EAAA,WAAA;AAAA,EACzB,YAA2B,EAAA,aAAA;AAAA,EAC3B,gBAA2B,EAAA,aAAA;AAAA,EAC3B,yBAA2B,EAAA,aAAA;AAAA,EAC3B,gBAA+B,EAAA,gBAAA;AAAA,EAC/B,oBAA+B,EAAA,gBAAA;AAAA,EAC/B,6BAA+B,EAAA,gBAAA;AACnC,CAAA,CAAA;AAGO,SAAA,OAAA,CAAiB,IAAS,IACjC,EAAA;AACI,EAAA,IAAI,CAAC,QACL,EAAA;AACI,IAAM,MAAA,SAAA,GAAY,MAAO,CAAA,IAAA,CAAK,gBAAgB,CAAA,CAAA;AAE9C,IAAA,QAAA,GAAW,EAAC,CAAA;AAEZ,IAAA,KAAA,IAAS,IAAI,CAAG,EAAA,CAAA,GAAI,SAAU,CAAA,MAAA,EAAQ,EAAE,CACxC,EAAA;AACI,MAAA,MAAM,KAAK,SAAU,CAAA,CAAA,CAAA,CAAA;AAErB,MAAS,QAAA,CAAA,EAAA,CAAG,OAAO,gBAAiB,CAAA,EAAA,CAAA,CAAA;AAAA,KACxC;AAAA,GACJ;AAEA,EAAA,OAAO,QAAS,CAAA,IAAA,CAAA,CAAA;AACpB;;;;"}