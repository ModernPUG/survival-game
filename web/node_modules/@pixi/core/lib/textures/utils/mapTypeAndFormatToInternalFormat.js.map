{"version":3,"file":"mapTypeAndFormatToInternalFormat.js","sources":["../../../src/textures/utils/mapTypeAndFormatToInternalFormat.ts"],"sourcesContent":["import { FORMATS, TYPES } from '@pixi/constants';\n\n/**\n * Returns a lookup table that maps each type-format pair to a compatible internal format.\n * @memberof PIXI\n * @function mapTypeAndFormatToInternalFormat\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @returns Lookup table.\n */\nexport function mapTypeAndFormatToInternalFormat(gl: WebGLRenderingContextBase):\n{ [type: number]: { [format: number]: number } }\n{\n    let table;\n\n    if ('WebGL2RenderingContext' in globalThis && gl instanceof globalThis.WebGL2RenderingContext)\n    {\n        table = {\n            [TYPES.UNSIGNED_BYTE]: {\n                [FORMATS.RGBA]: gl.RGBA8,\n                [FORMATS.RGB]: gl.RGB8,\n                [FORMATS.RG]: gl.RG8,\n                [FORMATS.RED]: gl.R8,\n                [FORMATS.RGBA_INTEGER]: gl.RGBA8UI,\n                [FORMATS.RGB_INTEGER]: gl.RGB8UI,\n                [FORMATS.RG_INTEGER]: gl.RG8UI,\n                [FORMATS.RED_INTEGER]: gl.R8UI,\n                [FORMATS.ALPHA]: gl.ALPHA,\n                [FORMATS.LUMINANCE]: gl.LUMINANCE,\n                [FORMATS.LUMINANCE_ALPHA]: gl.LUMINANCE_ALPHA,\n            },\n            [TYPES.BYTE]: {\n                [FORMATS.RGBA]: gl.RGBA8_SNORM,\n                [FORMATS.RGB]: gl.RGB8_SNORM,\n                [FORMATS.RG]: gl.RG8_SNORM,\n                [FORMATS.RED]: gl.R8_SNORM,\n                [FORMATS.RGBA_INTEGER]: gl.RGBA8I,\n                [FORMATS.RGB_INTEGER]: gl.RGB8I,\n                [FORMATS.RG_INTEGER]: gl.RG8I,\n                [FORMATS.RED_INTEGER]: gl.R8I,\n            },\n            [TYPES.UNSIGNED_SHORT]: {\n                [FORMATS.RGBA_INTEGER]: gl.RGBA16UI,\n                [FORMATS.RGB_INTEGER]: gl.RGB16UI,\n                [FORMATS.RG_INTEGER]: gl.RG16UI,\n                [FORMATS.RED_INTEGER]: gl.R16UI,\n                [FORMATS.DEPTH_COMPONENT]: gl.DEPTH_COMPONENT16,\n            },\n            [TYPES.SHORT]: {\n                [FORMATS.RGBA_INTEGER]: gl.RGBA16I,\n                [FORMATS.RGB_INTEGER]: gl.RGB16I,\n                [FORMATS.RG_INTEGER]: gl.RG16I,\n                [FORMATS.RED_INTEGER]: gl.R16I,\n            },\n            [TYPES.UNSIGNED_INT]: {\n                [FORMATS.RGBA_INTEGER]: gl.RGBA32UI,\n                [FORMATS.RGB_INTEGER]: gl.RGB32UI,\n                [FORMATS.RG_INTEGER]: gl.RG32UI,\n                [FORMATS.RED_INTEGER]: gl.R32UI,\n                [FORMATS.DEPTH_COMPONENT]: gl.DEPTH_COMPONENT24,\n            },\n            [TYPES.INT]: {\n                [FORMATS.RGBA_INTEGER]: gl.RGBA32I,\n                [FORMATS.RGB_INTEGER]: gl.RGB32I,\n                [FORMATS.RG_INTEGER]: gl.RG32I,\n                [FORMATS.RED_INTEGER]: gl.R32I,\n            },\n            [TYPES.FLOAT]: {\n                [FORMATS.RGBA]: gl.RGBA32F,\n                [FORMATS.RGB]: gl.RGB32F,\n                [FORMATS.RG]: gl.RG32F,\n                [FORMATS.RED]: gl.R32F,\n                [FORMATS.DEPTH_COMPONENT]: gl.DEPTH_COMPONENT32F,\n            },\n            [TYPES.HALF_FLOAT]: {\n                [FORMATS.RGBA]: gl.RGBA16F,\n                [FORMATS.RGB]: gl.RGB16F,\n                [FORMATS.RG]: gl.RG16F,\n                [FORMATS.RED]: gl.R16F,\n            },\n            [TYPES.UNSIGNED_SHORT_5_6_5]: {\n                [FORMATS.RGB]: gl.RGB565,\n            },\n            [TYPES.UNSIGNED_SHORT_4_4_4_4]: {\n                [FORMATS.RGBA]: gl.RGBA4,\n            },\n            [TYPES.UNSIGNED_SHORT_5_5_5_1]: {\n                [FORMATS.RGBA]: gl.RGB5_A1,\n            },\n            [TYPES.UNSIGNED_INT_2_10_10_10_REV]: {\n                [FORMATS.RGBA]: gl.RGB10_A2,\n                [FORMATS.RGBA_INTEGER]: gl.RGB10_A2UI,\n            },\n            [TYPES.UNSIGNED_INT_10F_11F_11F_REV]: {\n                [FORMATS.RGB]: gl.R11F_G11F_B10F,\n            },\n            [TYPES.UNSIGNED_INT_5_9_9_9_REV]: {\n                [FORMATS.RGB]: gl.RGB9_E5,\n            },\n            [TYPES.UNSIGNED_INT_24_8]: {\n                [FORMATS.DEPTH_STENCIL]: gl.DEPTH24_STENCIL8,\n            },\n            [TYPES.FLOAT_32_UNSIGNED_INT_24_8_REV]: {\n                [FORMATS.DEPTH_STENCIL]: gl.DEPTH32F_STENCIL8,\n            },\n        };\n    }\n    else\n    {\n        table = {\n            [TYPES.UNSIGNED_BYTE]: {\n                [FORMATS.RGBA]: gl.RGBA,\n                [FORMATS.RGB]: gl.RGB,\n                [FORMATS.ALPHA]: gl.ALPHA,\n                [FORMATS.LUMINANCE]: gl.LUMINANCE,\n                [FORMATS.LUMINANCE_ALPHA]: gl.LUMINANCE_ALPHA,\n            },\n            [TYPES.UNSIGNED_SHORT_5_6_5]: {\n                [FORMATS.RGB]: gl.RGB,\n            },\n            [TYPES.UNSIGNED_SHORT_4_4_4_4]: {\n                [FORMATS.RGBA]: gl.RGBA,\n            },\n            [TYPES.UNSIGNED_SHORT_5_5_5_1]: {\n                [FORMATS.RGBA]: gl.RGBA,\n            },\n        };\n    }\n\n    return table;\n}\n"],"names":["TYPES","FORMATS"],"mappings":"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"}