{"version":3,"file":"BatchGeometry.mjs","sources":["../../src/batch/BatchGeometry.ts"],"sourcesContent":["import { TYPES } from '@pixi/constants';\nimport { Geometry } from '../geometry/Geometry';\nimport { Buffer } from '../geometry/Buffer';\n\n/**\n * Geometry used to batch standard PIXI content (e.g. Mesh, Sprite, Graphics objects).\n * @memberof PIXI\n */\nexport class BatchGeometry extends Geometry\n{\n    /**\n     * Buffer used for position, color, texture IDs\n     * @protected\n     */\n    _buffer: Buffer;\n\n    /**\n     * Index buffer data\n     * @protected\n     */\n    _indexBuffer: Buffer;\n\n    /**\n     * @param {boolean} [_static=false] - Optimization flag, where `false`\n     *        is updated every frame, `true` doesn't change frame-to-frame.\n     */\n    constructor(_static = false)\n    {\n        super();\n\n        this._buffer = new Buffer(null, _static, false);\n\n        this._indexBuffer = new Buffer(null, _static, true);\n\n        this.addAttribute('aVertexPosition', this._buffer, 2, false, TYPES.FLOAT)\n            .addAttribute('aTextureCoord', this._buffer, 2, false, TYPES.FLOAT)\n            .addAttribute('aColor', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\n            .addAttribute('aTextureId', this._buffer, 1, true, TYPES.FLOAT)\n            .addIndex(this._indexBuffer);\n    }\n}\n"],"names":[],"mappings":";;;;AAQO,MAAM,sBAAsB,QACnC,CAAA;AAAA,EAiBI,WAAA,CAAY,UAAU,KACtB,EAAA;AACI,IAAM,KAAA,EAAA,CAAA;AAEN,IAAA,IAAA,CAAK,OAAU,GAAA,IAAI,MAAO,CAAA,IAAA,EAAM,SAAS,KAAK,CAAA,CAAA;AAE9C,IAAA,IAAA,CAAK,YAAe,GAAA,IAAI,MAAO,CAAA,IAAA,EAAM,SAAS,IAAI,CAAA,CAAA;AAElD,IAAA,IAAA,CAAK,aAAa,iBAAmB,EAAA,IAAA,CAAK,OAAS,EAAA,CAAA,EAAG,OAAO,KAAM,CAAA,KAAK,CACnE,CAAA,YAAA,CAAa,iBAAiB,IAAK,CAAA,OAAA,EAAS,GAAG,KAAO,EAAA,KAAA,CAAM,KAAK,CACjE,CAAA,YAAA,CAAa,QAAU,EAAA,IAAA,CAAK,SAAS,CAAG,EAAA,IAAA,EAAM,KAAM,CAAA,aAAa,EACjE,YAAa,CAAA,YAAA,EAAc,IAAK,CAAA,OAAA,EAAS,GAAG,IAAM,EAAA,KAAA,CAAM,KAAK,CAC7D,CAAA,QAAA,CAAS,KAAK,YAAY,CAAA,CAAA;AAAA,GACnC;AACJ;;;;"}