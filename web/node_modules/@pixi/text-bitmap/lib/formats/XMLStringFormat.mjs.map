{"version":3,"file":"XMLStringFormat.mjs","sources":["../../src/formats/XMLStringFormat.ts"],"sourcesContent":["import type { BitmapFontData } from '../BitmapFontData';\nimport { XMLFormat } from './XMLFormat';\n\n/**\n * BitmapFont format that's XML-based.\n * @private\n */\nexport class XMLStringFormat\n{\n    /**\n     * Check if resource refers to text xml font data.\n     * @param data\n     * @returns - True if resource could be treated as font data, false otherwise.\n     */\n    static test(data: unknown): boolean\n    {\n        if (typeof data === 'string' && data.includes('<font>'))\n        {\n            const xml = new globalThis.DOMParser().parseFromString(data, 'text/xml');\n\n            return XMLFormat.test(xml);\n        }\n\n        return false;\n    }\n\n    /**\n     * Convert the text XML into BitmapFontData that we can use.\n     * @param xmlTxt\n     * @returns - Data to use for BitmapFont\n     */\n    static parse(xmlTxt: string): BitmapFontData\n    {\n        const xml = new globalThis.DOMParser().parseFromString(xmlTxt, 'text/xml');\n\n        return XMLFormat.parse(xml);\n    }\n}\n"],"names":[],"mappings":";;AAOO,MAAM,eACb,CAAA;AAAA,EAMI,OAAO,KAAK,IACZ,EAAA;AACI,IAAA,IAAI,OAAO,IAAS,KAAA,QAAA,IAAY,IAAK,CAAA,QAAA,CAAS,QAAQ,CACtD,EAAA;AACI,MAAA,MAAM,MAAM,IAAI,UAAA,CAAW,WAAY,CAAA,eAAA,CAAgB,MAAM,UAAU,CAAA,CAAA;AAEvE,MAAO,OAAA,SAAA,CAAU,KAAK,GAAG,CAAA,CAAA;AAAA,KAC7B;AAEA,IAAO,OAAA,KAAA,CAAA;AAAA,GACX;AAAA,EAOA,OAAO,MAAM,MACb,EAAA;AACI,IAAA,MAAM,MAAM,IAAI,UAAA,CAAW,WAAY,CAAA,eAAA,CAAgB,QAAQ,UAAU,CAAA,CAAA;AAEzE,IAAO,OAAA,SAAA,CAAU,MAAM,GAAG,CAAA,CAAA;AAAA,GAC9B;AACJ;;;;"}