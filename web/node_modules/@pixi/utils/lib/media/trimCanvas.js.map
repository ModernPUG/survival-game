{"version":3,"file":"trimCanvas.js","sources":["../../src/media/trimCanvas.ts"],"sourcesContent":["import type { ICanvas } from '@pixi/settings';\n\ninterface Inset\n{\n    top?: number;\n    left?: number;\n    right?: number;\n    bottom?: number;\n}\n\n/**\n * Trim transparent borders from a canvas\n * @memberof PIXI.utils\n * @function trimCanvas\n * @param {PIXI.ICanvas} canvas - the canvas to trim\n * @returns {object} Trim data\n */\nexport function trimCanvas(canvas: ICanvas): {width: number; height: number; data?: ImageData}\n{\n    // https://gist.github.com/remy/784508\n\n    let width = canvas.width;\n    let height = canvas.height;\n\n    const context = canvas.getContext('2d', {\n        willReadFrequently: true,\n    });\n    const imageData = context.getImageData(0, 0, width, height);\n    const pixels = imageData.data;\n    const len = pixels.length;\n\n    const bound: Inset = {\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n    };\n    let data = null;\n    let i;\n    let x;\n    let y;\n\n    for (i = 0; i < len; i += 4)\n    {\n        if (pixels[i + 3] !== 0)\n        {\n            x = (i / 4) % width;\n            y = ~~((i / 4) / width);\n\n            if (bound.top === null)\n            {\n                bound.top = y;\n            }\n\n            if (bound.left === null)\n            {\n                bound.left = x;\n            }\n            else if (x < bound.left)\n            {\n                bound.left = x;\n            }\n\n            if (bound.right === null)\n            {\n                bound.right = x + 1;\n            }\n            else if (bound.right < x)\n            {\n                bound.right = x + 1;\n            }\n\n            if (bound.bottom === null)\n            {\n                bound.bottom = y;\n            }\n            else if (bound.bottom < y)\n            {\n                bound.bottom = y;\n            }\n        }\n    }\n\n    if (bound.top !== null)\n    {\n        width = bound.right - bound.left;\n        height = bound.bottom - bound.top + 1;\n        data = context.getImageData(bound.left, bound.top, width, height);\n    }\n\n    return {\n        height,\n        width,\n        data,\n    };\n}\n"],"names":[],"mappings":";;;;AAiBO,SAAA,UAAA,CAAoB,MAC3B,EAAA;AAGI,EAAA,IAAI,QAAQ,MAAO,CAAA,KAAA,CAAA;AACnB,EAAA,IAAI,SAAS,MAAO,CAAA,MAAA,CAAA;AAEpB,EAAM,MAAA,OAAA,GAAU,MAAO,CAAA,UAAA,CAAW,IAAM,EAAA;AAAA,IACpC,kBAAoB,EAAA,IAAA;AAAA,GACvB,CAAA,CAAA;AACD,EAAA,MAAM,YAAY,OAAQ,CAAA,YAAA,CAAa,CAAG,EAAA,CAAA,EAAG,OAAO,MAAM,CAAA,CAAA;AAC1D,EAAA,MAAM,SAAS,SAAU,CAAA,IAAA,CAAA;AACzB,EAAA,MAAM,MAAM,MAAO,CAAA,MAAA,CAAA;AAEnB,EAAA,MAAM,KAAe,GAAA;AAAA,IACjB,GAAK,EAAA,IAAA;AAAA,IACL,IAAM,EAAA,IAAA;AAAA,IACN,KAAO,EAAA,IAAA;AAAA,IACP,MAAQ,EAAA,IAAA;AAAA,GACZ,CAAA;AACA,EAAA,IAAI,IAAO,GAAA,IAAA,CAAA;AACX,EAAI,IAAA,CAAA,CAAA;AACJ,EAAI,IAAA,CAAA,CAAA;AACJ,EAAI,IAAA,CAAA,CAAA;AAEJ,EAAA,KAAK,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,GAAA,EAAK,KAAK,CAC1B,EAAA;AACI,IAAI,IAAA,MAAA,CAAO,CAAI,GAAA,CAAA,CAAA,KAAO,CACtB,EAAA;AACI,MAAA,CAAA,GAAK,IAAI,CAAK,GAAA,KAAA,CAAA;AACd,MAAI,CAAA,GAAA,CAAC,EAAG,CAAA,GAAI,CAAK,GAAA,KAAA,CAAA,CAAA;AAEjB,MAAI,IAAA,KAAA,CAAM,QAAQ,IAClB,EAAA;AACI,QAAA,KAAA,CAAM,GAAM,GAAA,CAAA,CAAA;AAAA,OAChB;AAEA,MAAI,IAAA,KAAA,CAAM,SAAS,IACnB,EAAA;AACI,QAAA,KAAA,CAAM,IAAO,GAAA,CAAA,CAAA;AAAA,OACjB,MAAA,IACS,CAAI,GAAA,KAAA,CAAM,IACnB,EAAA;AACI,QAAA,KAAA,CAAM,IAAO,GAAA,CAAA,CAAA;AAAA,OACjB;AAEA,MAAI,IAAA,KAAA,CAAM,UAAU,IACpB,EAAA;AACI,QAAA,KAAA,CAAM,QAAQ,CAAI,GAAA,CAAA,CAAA;AAAA,OACtB,MAAA,IACS,KAAM,CAAA,KAAA,GAAQ,CACvB,EAAA;AACI,QAAA,KAAA,CAAM,QAAQ,CAAI,GAAA,CAAA,CAAA;AAAA,OACtB;AAEA,MAAI,IAAA,KAAA,CAAM,WAAW,IACrB,EAAA;AACI,QAAA,KAAA,CAAM,MAAS,GAAA,CAAA,CAAA;AAAA,OACnB,MAAA,IACS,KAAM,CAAA,MAAA,GAAS,CACxB,EAAA;AACI,QAAA,KAAA,CAAM,MAAS,GAAA,CAAA,CAAA;AAAA,OACnB;AAAA,KACJ;AAAA,GACJ;AAEA,EAAI,IAAA,KAAA,CAAM,QAAQ,IAClB,EAAA;AACI,IAAQ,KAAA,GAAA,KAAA,CAAM,QAAQ,KAAM,CAAA,IAAA,CAAA;AAC5B,IAAS,MAAA,GAAA,KAAA,CAAM,MAAS,GAAA,KAAA,CAAM,GAAM,GAAA,CAAA,CAAA;AACpC,IAAA,IAAA,GAAO,QAAQ,YAAa,CAAA,KAAA,CAAM,MAAM,KAAM,CAAA,GAAA,EAAK,OAAO,MAAM,CAAA,CAAA;AAAA,GACpE;AAEA,EAAO,OAAA;AAAA,IACH,MAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,GACJ,CAAA;AACJ;;;;"}